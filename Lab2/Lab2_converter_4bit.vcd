$date
	Mon May 09 13:28:41 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_Lab2_converter_4bit $end
$var wire 1 ! v3 $end
$var wire 1 " v2 $end
$var wire 1 # v1 $end
$var wire 4 $ B3 [3:0] $end
$var wire 4 % B2 [3:0] $end
$var wire 4 & B1 [3:0] $end
$var reg 4 ' E [3:0] $end
$scope module behabioral $end
$var wire 4 ( E [3:0] $end
$var reg 4 ) B [3:0] $end
$var reg 1 ! v $end
$upscope $end
$scope module dataflow $end
$var wire 4 * E [3:0] $end
$var wire 1 " v $end
$var wire 4 + B [3:0] $end
$upscope $end
$scope module gatelevel $end
$var wire 4 , E [3:0] $end
$var wire 1 # v $end
$var wire 1 - w1 $end
$var wire 1 . w10 $end
$var wire 1 / w11 $end
$var wire 1 0 w12 $end
$var wire 1 1 w14 $end
$var wire 1 2 w2 $end
$var wire 1 3 w3 $end
$var wire 1 4 w5 $end
$var wire 1 5 w6 $end
$var wire 1 6 w7 $end
$var wire 1 7 w9 $end
$var wire 4 8 not_E [3:0] $end
$var wire 4 9 B [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 9
b1111 8
17
06
05
04
03
02
01
10
0/
1.
0-
b0 ,
b0 +
b0 *
bx )
b0 (
b0 '
b0 &
b0 %
bx $
0#
0"
0!
$end
#30
07
b1110 8
11
b1 '
b1 (
b1 *
b1 ,
#60
17
0.
b1101 8
b10 '
b10 (
b10 *
b10 ,
#90
00
07
b0 &
b0 9
1"
1#
b1100 8
13
01
b0 $
b0 )
1!
b11 '
b11 (
b11 *
b11 ,
#120
b1 &
b1 9
12
1"
b1 %
b1 +
b1011 8
1-
03
b1 $
b1 )
b100 '
b100 (
b100 *
b100 ,
#150
02
b10 &
b10 9
b10 %
b10 +
b1010 8
11
b10 $
b10 )
b101 '
b101 (
b101 *
b101 ,
#180
b11 &
b11 9
b11 %
b11 +
b1001 8
b11 $
b11 )
b110 '
b110 (
b110 *
b110 ,
#210
10
b100 &
b100 9
b100 %
b100 +
b1000 8
13
1/
01
b100 $
b100 )
b111 '
b111 (
b111 *
b111 ,
#240
17
1.
b101 &
b101 9
10
b101 %
b101 +
b111 8
03
0/
b101 $
b101 )
b1000 '
b1000 (
b1000 *
b1000 ,
#270
07
b110 &
b110 9
b110 %
b110 +
b110 8
11
b110 $
b110 )
b1001 '
b1001 (
b1001 *
b1001 ,
#300
17
b111 &
b111 9
0.
b111 %
b111 +
b101 8
b111 $
b111 )
b1010 '
b1010 (
b1010 *
b1010 ,
#330
00
07
16
b1000 &
b1000 9
b1000 %
b1000 +
b100 8
14
01
b1000 $
b1000 )
b1011 '
b1011 (
b1011 *
b1011 ,
#360
12
b1001 &
b1001 9
1#
b1001 %
b1001 +
b11 8
0-
04
15
b1001 $
b1001 )
b1100 '
b1100 (
b1100 *
b1100 ,
#390
0#
0"
02
b0 &
b0 9
b0 %
b0 +
b10 8
11
bx $
bx )
0!
b1101 '
b1101 (
b1101 *
b1101 ,
#420
b0 %
b0 +
0"
b1 8
b1110 '
b1110 (
b1110 *
b1110 ,
#450
10
b0 8
14
1/
01
b1111 '
b1111 (
b1111 *
b1111 ,
#480
